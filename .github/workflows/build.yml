name: Build

permissions:
  contents: write
  discussions: write

on:
  push:
    branches: "*"
    paths:
      - "**/*.rs"
      - "Cargo.toml"
      - "Cargo.lock"
      - ".cargo/config.toml"
      - ".github/workflows/build.yml"
    tags: "*"
  pull_request:
    branches: "*"
    paths:
      - "**/*.rs"
      - "Cargo.toml"
      - "Cargo.lock"
      - ".cargo/config.toml"
      - ".github/workflows/build.yml"

jobs:
  build:
    name: ${{ matrix.kind }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - ubuntu-24.04-arm
          - macOS-13 # Intel
          - macOS-latest # Apple Silicon
          - windows-latest

    env:
      CARGO_INCREMENTAL: 0
      RUST_BACKTRACE: full
      CARGO_TERM_COLOR: always

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install system dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y \
              gcc g++ clang libfontconfig-dev libwayland-dev \
              libwebkit2gtk-4.1-dev libxkbcommon-x11-dev \
              libx11-xcb-dev libxcb1-dev \
              libssl-dev libzstd-dev \
              vulkan-validationlayers libvulkan1 \
              mold

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Log versions
        run: |
          rustc --version
          cargo --version

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |-
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/*/.*
            target/*/build
            target/*/deps
          key:
            ${{ matrix.config.os }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ matrix.config.os }}-

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

      - name: Run cargo check
        run: cargo check --locked

      - name: Run cargo clippy
        run: cargo clippy -- -D warnings

      - name: Run cargo test
        run: cargo test --locked

      - name: Build release
        run: cargo build --release --locked

      - name: Package release
        run: |-
          cargo install cargo-packager
          cargo packager --release

      - name: Pre-release (linux x86_64)
        if: matrix.os == 'ubuntu-latest'
        run: zip -r gpui-memory-game-x86_64-unknown-linux-gnu.zip gpui-memory-game
        working-directory: target/release

      - name: Pre-release (linux aarch64)
        if: matrix.os == 'ubuntu-24.04-arm'
        run: zip -r gpui-memory-game-aarch64-unknown-linux-gnu.zip gpui-memory-game
        working-directory: target/release

      - name: Pre-release (mac)
        if: matrix.os == 'macOS-13'
        run: zip -r gpui-memory-game-x86_64-apple-darwin.zip gpui-memory-game.app
        working-directory: target/release

      - name: Pre-release (aarch64-apple-darwin)
        if: matrix.os == 'macOS-latest'
        run: zip -r gpui-memory-game-aarch64-apple-darwin.zip gpui-memory-game.app
        working-directory: target/release

      - name: Pre-release (windows x86_64)
        if: matrix.os == 'windows-latest'
        run: |
          Compress-Archive -CompressionLevel Optimal -Force -Path target/release/gpui-memory-game.exe -DestinationPath target/release/gpui-memory-game-x86_64-pc-windows-msvc.zip

      - name: Release
        uses: softprops/action-gh-release@v2
        if: |
          startsWith(github.repository, 'justjavac') &&
          startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/release/gpui-memory-game-x86_64-pc-windows-msvc.zip
            target/release/gpui-memory-game-x86_64-unknown-linux-gnu.zip
            target/release/gpui-memory-game-x86_64-apple-darwin.zip
            target/release/gpui-memory-game-aarch64-apple-darwin.zip
            target/release/gpui-memory-game-aarch64-unknown-linux-gnu.zip
            target/release/gpui-memory-game_*.dmg
            target/release/gpui-memory-game_*.msi
            target/release/gpui-memory-game_*-setup.exe
            target/release/gpui-memory-game_*.deb
            target/release/gpui-memory-game_*.AppImage
            target/release/gpui-memory-game_*.tar.gz
